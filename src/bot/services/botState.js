const config = require("../../../config/bot");

class BotStateService {
  constructor() {
    this.isEnabled = false; // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –±–æ—Ç –≤–∏–º–∫–Ω–µ–Ω–∏–π
    this.disabledSince = new Date(); // –ß–∞—Å –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ –≤–∏–º–∫–Ω–µ–Ω–Ω—è
    this.disabledBy = "system"; // –í–∏–º–∫–Ω–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º–æ—é –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–¥–º—ñ–Ω–æ–º
  isAdmin(userId) {
    return config.adminIds.includes(userId);
  }

  // –í–∏–º–∫–Ω—É—Ç–∏ –±–æ—Ç–∞
  disable(adminId) {
    if (!this.isAdmin(adminId)) {
      return false;
    }

    this.isEnabled = false;
    this.disabledSince = new Date();
    this.disabledBy = adminId;

    console.log(`üî¥ Bot disabled by admin ${adminId} at ${this.disabledSince}`);
    return true;
  }

  // –£–≤—ñ–º–∫–Ω—É—Ç–∏ –±–æ—Ç–∞
  enable(adminId) {
    if (!this.isAdmin(adminId)) {
      return false;
    }

    this.isEnabled = true;
    this.disabledSince = null;
    this.disabledBy = null;

    console.log(`üü¢ Bot enabled by admin ${adminId}`);
    return true;
  }

  // –ü–µ—Ä–µ–º–∫–Ω—É—Ç–∏ —Å—Ç–∞–Ω –±–æ—Ç–∞
  toggle(adminId) {
    if (!this.isAdmin(adminId)) {
      return { success: false, enabled: this.isEnabled };
    }

    if (this.isEnabled) {
      this.disable(adminId);
    } else {
      this.enable(adminId);
    }

    return { success: true, enabled: this.isEnabled };
  }

  // –û—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω
  getStatus() {
    return {
      enabled: this.isEnabled,
      disabledSince: this.disabledSince,
      disabledBy: this.disabledBy,
    };
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ –±–æ—Ç –º–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
  shouldRespond(userId = null) {
    // –Ø–∫—â–æ –±–æ—Ç –≤–∏–º–∫–Ω–µ–Ω–∏–π, –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ç—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω–∞–º
    if (!this.isEnabled) {
      return userId && this.isAdmin(userId);
    }

    return true;
  }

  // –û—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Å—Ç–∞–Ω –¥–ª—è –∞–¥–º—ñ–Ω–∞
  getStatusMessage(userId, languageService) {
    const userLang = languageService.getUserLanguage(userId);
    const isAdmin = this.isAdmin(userId);

    if (this.isEnabled) {
      if (isAdmin) {
        return userLang === "uk"
          ? "üü¢ <b>–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞: –£–≤—ñ–º–∫–Ω–µ–Ω–∏–π</b>\n\n–ë–æ—Ç –∞–∫—Ç–∏–≤–Ω–∏–π —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –Ω–∞ –≤—Å—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.\n\nüîß –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /admin –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è."
          : "üü¢ <b>Bot Status: Enabled</b>\n\nBot is active and responding to all messages.\n\nüîß Use /admin for management.";
      } else {
        return userLang === "uk"
          ? "üü¢ <b>–ë–æ—Ç –∞–∫—Ç–∏–≤–Ω–∏–π</b>\n\n–î–ª—è –≤–∑–∞—î–º–æ–¥—ñ—ó –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–æ–º–∞–Ω–¥–∏ –∞–±–æ –∑–≥–∞–¥–∞–π—Ç–µ –º–µ–Ω–µ –≤ –≥—Ä—É–ø—ñ."
          : "üü¢ <b>Bot is active</b>\n\nUse commands or mention me in groups to interact.";
      }
    } else {
      const disabledTime = this.disabledSince
        ? this.disabledSince.toLocaleString()
        : "Unknown";
      if (isAdmin) {
        return userLang === "uk"
          ? `üî¥ <b>–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞: –í–∏–º–∫–Ω–µ–Ω–∏–π</b>\n\n–ë–æ—Ç –≤–∏–º–∫–Ω–µ–Ω–∏–π –∑: ${disabledTime}\n–í–∏–º–∫–Ω—É–≤: ${this.disabledBy === "system" ? "–°–∏—Å—Ç–µ–º–∞" : "–ê–¥–º—ñ–Ω " + this.disabledBy}\n\n‚ö†Ô∏è –ë–æ—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ç—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω–∞–º.\nüîß –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /admin –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è.`
          : `üî¥ <b>Bot Status: Disabled</b>\n\nBot disabled since: ${disabledTime}\nDisabled by: ${this.disabledBy === "system" ? "System" : "Admin " + this.disabledBy}\n\n‚ö†Ô∏è Bot only responds to admins.\nüîß Use /admin for management.`;
      } else {
        return userLang === "uk"
          ? "üî¥ <b>–ë–æ—Ç –Ω–∞—Ä–∞–∑—ñ –≤–∏–º–∫–Ω–µ–Ω–∏–π</b>\n\n–¢—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏ –º–æ–∂—É—Ç—å –≤–∑–∞—î–º–æ–¥—ñ—è—Ç–∏ –∑ –±–æ—Ç–æ–º.\n\nüí° <i>–ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —É–≤—ñ–º–∫–Ω–µ–Ω–Ω—è</i>"
          : "üî¥ <b>Bot is currently disabled</b>\n\nOnly administrators can interact with the bot.\n\nüí° <i>Contact an administrator to enable the bot</i>";
      }
    }
  }

  // –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –¥–ª—è –∞–¥–º—ñ–Ω–∞
  getAdminKeyboard(userId, languageService) {
    const userLang = languageService.getUserLanguage(userId);

    const toggleText = this.isEnabled
      ? userLang === "uk"
        ? "üî¥ –í–∏–º–∫–Ω—É—Ç–∏ –±–æ—Ç–∞"
        : "üî¥ Disable Bot"
      : userLang === "uk"
        ? "üü¢ –£–≤—ñ–º–∫–Ω—É—Ç–∏ –±–æ—Ç–∞"
        : "üü¢ Enable Bot";

    const refreshText =
      userLang === "uk" ? "üîÑ –û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å" : "üîÑ Refresh Status";
    const throttleText = userLang === "uk" ? "‚è±Ô∏è –¢—Ä–æ—Ç—Ç–ª—ñ–Ω–≥" : "‚è±Ô∏è Throttling";
    const backText = userLang === "uk" ? "üîô –ù–∞–∑–∞–¥" : "üîô Back";

    return {
      inline_keyboard: [
        [{ text: toggleText, callback_data: "admin_toggle_bot" }],
        [{ text: refreshText, callback_data: "admin_status" }],
        [{ text: throttleText, callback_data: "admin_throttle_stats" }],
        [{ text: backText, callback_data: "main_menu" }],
      ],
    };
  }
}

module.exports = new BotStateService();
