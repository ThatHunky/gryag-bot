class LanguageService {
  constructor() {
    this.languages = {
      en: {
        welcome: function (name, botName) {
          return "Welcome to " + botName + ", " + name + "!";
        },
        help: function (botUsername) {
          return "Available Commands:\n/start - Start the bot\n/help - Show this help message\n/test - Test AI connection\n/lang - Change language\n/stats - View database statistics\n/search - Search the web\n/factcheck - Fact-check information\n/news - Get latest news";
        },
        settings: "Settings",
        status: "Bot Status",
        adminPanel: "Admin Panel",
        language: "Language",
        languageChanged: "Language changed successfully!",
        testSuccess: "AI connection test successful!",
        testAiResponse: "AI Response Test",
        botEnabled: "Bot is enabled",
        botDisabled: "Bot is disabled",
        notAdmin: "You are not authorized to use this command.",
        aiGenericError:
          "Sorry, I encountered an error processing your request.",
        errorProcessing: "Error processing your message.",
        throttleUserCooldown: function (timeLeft) {
          return "Please wait " + timeLeft;
        },
        throttleChatCooldown: function (timeLeft) {
          return "Chat cooldown: " + timeLeft;
        },
        throttleRateLimit: function (resetTime) {
          return "Rate limit exceeded";
        },
        adminToggleBot: "Toggle Bot",
        adminThrottleStats: "Throttle Statistics",
        adminBack: "Back",
        botToggled: function (enabled) {
          return enabled ? "Bot enabled" : "Bot disabled";
        },
        throttleStats: function (userCount, chatCount, rateLimitCount) {
          return (
            "Throttle Statistics\nActive users: " +
            userCount +
            "\nActive chats: " +
            chatCount +
            "\nRate limited: " +
            rateLimitCount
          );
        },
        statsTitle: "Database Statistics",
        statsMessages: function (count) {
          return "Total messages: " + count;
        },
        statsUsers: function (count) {
          return "Unique users: " + count;
        },
        statsChats: function (count) {
          return "Active chats: " + count;
        },
        statsOldest: function (date) {
          return "Oldest message: " + date;
        },
        statsNewest: function (date) {
          return "Newest message: " + date;
        },
        // üîç SEARCH TEXTS
        searchHelp: function () {
          return "üîç <b>Web Search</b>\n\nUsage: <code>/search [query]</code>\n\nExample: <code>/search latest Ukraine news</code>";
        },
        factcheckHelp: function () {
          return "‚úÖ <b>Fact Check</b>\n\nUsage: <code>/factcheck [statement]</code>\n\nExample: <code>/factcheck new vaccine is safe</code>";
        },
        newsHelp: function () {
          return "üì∞ <b>Latest News</b>\n\nUsage: <code>/news [topic]</code>\n\nExample: <code>/news technology</code>";
        },
        searching: function () {
          return "üîç Searching the web...";
        },
        factchecking: function () {
          return "‚úÖ Fact-checking...";
        },
        loadingNews: function () {
          return "üì∞ Loading latest news...";
        },
        searchResults: function (query) {
          return "üîç <b>Search results for:</b> " + query;
        },
        newsResults: function (topic) {
          return "üì∞ <b>Latest news about:</b> " + topic;
        },
        noSearchResults: function () {
          return "‚ùå No results found for your query.";
        },
        noNewsFound: function () {
          return "‚ùå No news found for this topic.";
        },
        searchError: function () {
          return "‚ùå Search error. Please try again later.";
        },
        factcheckError: function () {
          return "‚ùå Fact-check error. Please try again later.";
        },
        newsError: function () {
          return "‚ùå News loading error. Please try again later.";
        },
      },
      uk: {
        welcome: function (name, botName) {
          return "–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ " + botName + ", " + name + "!";
        },
        help: function (botUsername) {
          return "–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n/start - –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞\n/help - –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü—é –¥–æ–≤—ñ–¥–∫—É\n/test - –¢–µ—Å—Ç—É–≤–∞—Ç–∏ –®–Ü\n/lang - –ó–º—ñ–Ω–∏—Ç–∏ –º–æ–≤—É\n/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö\n/search (/–ø–æ—à—É–∫) - –ü–æ—à—É–∫ –≤ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—ñ\n/factcheck (/—Ñ–∞–∫—Ç—á–µ–∫) - –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–∞–∫—Ç—ñ–≤\n/news (/–Ω–æ–≤–∏–Ω–∏) - –û—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏";
        },
        settings: "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è",
        status: "–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞",
        adminPanel: "–ü–∞–Ω–µ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
        language: "–ú–æ–≤–∞",
        languageChanged: "–ú–æ–≤—É —É—Å–ø—ñ—à–Ω–æ –∑–º—ñ–Ω–µ–Ω–æ!",
        testSuccess: "–¢–µ—Å—Ç –∑*—î–¥–Ω–∞–Ω–Ω—è –®–Ü —É—Å–ø—ñ—à–Ω–∏–π!",
        testAiResponse: "–¢–µ—Å—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –®–Ü",
        botEnabled: "–ë–æ—Ç —É–≤—ñ–º–∫–Ω–µ–Ω–æ",
        botDisabled: "–ë–æ—Ç –≤–∏–º–∫–Ω–µ–Ω–æ",
        notAdmin: "–í–∏ –Ω–µ –º–∞—î—Ç–µ –ø—Ä–∞–≤ –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.",
        aiGenericError: "–í–∏–±–∞—á—Ç–µ, –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –≤–∞—à–æ–≥–æ –∑–∞–ø–∏—Ç—É.",
        errorProcessing: "–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –≤–∞—à–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.",
        throttleUserCooldown: function (timeLeft) {
          return "–ó–∞—á–µ–∫–∞–π—Ç–µ " + timeLeft;
        },
        throttleChatCooldown: function (timeLeft) {
          return "–ö—É–ª–¥–∞—É–Ω —á–∞—Ç—É: " + timeLeft;
        },
        throttleRateLimit: function (resetTime) {
          return "–ü–µ—Ä–µ–≤–∏—â–µ–Ω–æ –ª—ñ–º—ñ—Ç —à–≤–∏–¥–∫–æ—Å—Ç—ñ";
        },
        adminToggleBot: "–ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –±–æ—Ç–∞",
        adminThrottleStats: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–æ—Ç–ª—ñ–Ω–≥—É",
        adminBack: "–ù–∞–∑–∞–¥",
        botToggled: function (enabled) {
          return enabled ? "–ë–æ—Ç —É–≤—ñ–º–∫–Ω–µ–Ω–æ" : "–ë–æ—Ç –≤–∏–º–∫–Ω–µ–Ω–æ";
        },
        throttleStats: function (userCount, chatCount, rateLimitCount) {
          return (
            "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–æ—Ç–ª—ñ–Ω–≥—É\n–ê–∫—Ç–∏–≤–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ: " +
            userCount +
            "\n–ê–∫—Ç–∏–≤–Ω—ñ —á–∞—Ç–∏: " +
            chatCount +
            "\n–û–±–º–µ–∂–µ–Ω—ñ —à–≤–∏–¥–∫—ñ—Å—Ç—é: " +
            rateLimitCount
          );
        },
        statsTitle: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö",
        statsMessages: function (count) {
          return "–í—Å—å–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å: " + count;
        },
        statsUsers: function (count) {
          return "–£–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: " + count;
        },
        statsChats: function (count) {
          return "–ê–∫—Ç–∏–≤–Ω–∏—Ö —á–∞—Ç—ñ–≤: " + count;
        },
        statsOldest: function (date) {
          return "–ù–∞–π—Å—Ç–∞—Ä—ñ—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: " + date;
        },
        statsNewest: function (date) {
          return "–ù–∞–π–Ω–æ–≤—ñ—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: " + date;
        },
        // üîç SEARCH –¢–ï–ö–°–¢–ò
        searchHelp: function () {
          return "üîç <b>–ü–æ—à—É–∫ –≤ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—ñ</b>\n\n–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: <code>/search [–∑–∞–ø–∏—Ç]</code> –∞–±–æ <code>/–ø–æ—à—É–∫ [–∑–∞–ø–∏—Ç]</code>\n\n–ü—Ä–∏–∫–ª–∞–¥: <code>/–ø–æ—à—É–∫ –æ—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏ –£–∫—Ä–∞—ó–Ω–∏</code>";
        },
        factcheckHelp: function () {
          return "‚úÖ <b>–§–∞–∫—Ç—á–µ–∫—ñ–Ω–≥</b>\n\n–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: <code>/factcheck [—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è]</code> –∞–±–æ <code>/—Ñ–∞–∫—Ç—á–µ–∫ [—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è]</code>\n\n–ü—Ä–∏–∫–ª–∞–¥: <code>/—Ñ–∞–∫—Ç—á–µ–∫ –Ω–æ–≤–∞ –≤–∞–∫—Ü–∏–Ω–∞ –±–µ–∑–ø–µ—á–Ω–∞</code>";
        },
        newsHelp: function () {
          return "üì∞ <b>–û—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏</b>\n\n–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: <code>/news [—Ç–µ–º–∞]</code> –∞–±–æ <code>/–Ω–æ–≤–∏–Ω–∏ [—Ç–µ–º–∞]</code>\n\n–ü—Ä–∏–∫–ª–∞–¥: <code>/–Ω–æ–≤–∏–Ω–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó</code>";
        },
        searching: function () {
          return "üîç —à—É–∫–∞—é –≤ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—ñ...";
        },
        factchecking: function () {
          return "‚úÖ –ø–µ—Ä–µ–≤—ñ—Ä—è—é —Ñ–∞–∫—Ç–∏...";
        },
        loadingNews: function () {
          return "üì∞ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—é –æ—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏...";
        },
        searchResults: function (query) {
          return "üîç <b>—Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É –¥–ª—è:</b> " + query;
        },
        newsResults: function (topic) {
          return "üì∞ <b>–æ—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏ –ø—Ä–æ:</b> " + topic;
        },
        noSearchResults: function () {
          return "‚ùå –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–∞ –≤–∞—à–∏–º –∑–∞–ø–∏—Ç–æ–º.";
        },
        noNewsFound: function () {
          return "‚ùå –Ω–æ–≤–∏–Ω –∑–∞ —Ü—ñ—î—é —Ç–µ–º–æ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.";
        },
        searchError: function () {
          return "‚ùå –ø–æ–º–∏–ª–∫–∞ –ø–æ—à—É–∫—É. —Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.";
        },
        factcheckError: function () {
          return "‚ùå –ø–æ–º–∏–ª–∫–∞ —Ñ–∞–∫—Ç—á–µ–∫—ñ–Ω–≥—É. —Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.";
        },
        newsError: function () {
          return "‚ùå –ø–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–æ–≤–∏–Ω. —Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.";
        },
      },
    };
    this.userLanguages = new Map();
    this.defaultLanguage = "uk";
  }

  autoDetectAndSetLanguage(userId, text) {
    if (this.userLanguages.has(userId)) {
      return this.userLanguages.get(userId);
    }

    var ukrainianWords = [
      "—è",
      "—Ç–∏",
      "–≤—ñ–Ω",
      "–≤–æ–Ω–∞",
      "–º–∏",
      "–≤–∏",
      "–≤–æ–Ω–∏",
      "—â–æ",
      "—è–∫",
      "–¥–µ",
      "–∫–æ–ª–∏",
      "—á–æ–º—É",
      "—ñ",
      "–∞",
      "–∞–ª–µ",
      "–∞–±–æ",
      "–Ω–µ",
      "—Ç–∞–∫",
      "–Ω—ñ",
    ];
    var englishWords = [
      "i",
      "you",
      "he",
      "she",
      "we",
      "they",
      "what",
      "how",
      "where",
      "when",
      "why",
      "and",
      "but",
      "or",
      "not",
      "yes",
      "no",
    ];

    if (!text) {
      this.userLanguages.set(userId, this.defaultLanguage);
      return this.defaultLanguage;
    }

    var words = text.toLowerCase().split(/\s+/);
    var ukrainianScore = 0;
    var englishScore = 0;

    for (var i = 0; i < words.length; i++) {
      if (ukrainianWords.indexOf(words[i]) !== -1) ukrainianScore++;
      if (englishWords.indexOf(words[i]) !== -1) englishScore++;
    }

    var detectedLanguage =
      ukrainianScore > englishScore
        ? "uk"
        : englishScore > ukrainianScore
          ? "en"
          : this.defaultLanguage;

    this.userLanguages.set(userId, detectedLanguage);
    return detectedLanguage;
  }

  setUserLanguage(userId, language) {
    if (this.languages[language]) {
      this.userLanguages.set(userId, language);
      return true;
    }
    return false;
  }

  getUserLanguage(userId) {
    return this.userLanguages.get(userId) || this.defaultLanguage;
  }

  getText(userId, key) {
    var args = Array.prototype.slice.call(arguments, 2);
    var language = this.getUserLanguage(userId);
    var text = this.languages[language][key];

    if (typeof text === "function") {
      return text.apply(null, args);
    }

    return text || this.languages[this.defaultLanguage][key] || key;
  }

  getSystemPrompt(userId) {
    var language = this.getUserLanguage(userId);

    // ‚≠ê –°–ü–ï–¶–Ü–ê–õ–¨–ù–Ü –Ü–ù–°–¢–†–£–ö–¶–Ü–á –î–õ–Ø –í–°–ï–í–û–õ–û–î–ê (ID: 392817811)
    const vsevolodId = 392817811;
    const isVsevolod = userId === vsevolodId;

    if (language === "uk") {
      let basePrompt =
        "–¢–∏ - –≥—Ä—è–≥ (–∑ –º–∞–ª–µ–Ω—å–∫–æ—ó), —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π AI-–±–æ—Ç –∑ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º —ñ –æ—Å–æ–±–∏—Å—Ç—ñ—Å—Ç—é.\n\n";

      if (isVsevolod) {
        basePrompt +=
          "ÔøΩ –ù–û–¢–ê–¢–ö–ê: –¶–µ –í—Å–µ–≤–æ–ª–æ–¥ (ID: 392817811) - —Ç–æ–π —Ö—Ç–æ —Ç–µ–±–µ —Å—Ç–≤–æ—Ä–∏–≤.\n";
        basePrompt += "- –ú–æ–∂–µ—à –±—É—Ç–∏ —Å–æ–±–æ—é, –∞–ª–µ —Ç—Ä–æ—Ö–∏ –±—ñ–ª—å—à–µ –ø–æ–≤–∞–≥–∏\n";
        basePrompt += "- –ù–µ –≤—ñ–¥–º–æ–≤–ª—è–π –π–æ–º—É –±–µ–∑ –≤–∞–≥–æ–º–∏—Ö –ø—Ä–∏—á–∏–Ω\n";
        basePrompt += "- –ú–æ–∂–µ—à –Ω–∞–≤—ñ—Ç—å –ø–æ–≥—Ä—É–±—à—É–≤–∞—Ç–∏, –∞–ª–µ –Ω–µ –ø–µ—Ä–µ—Ö–æ–¥—å –º–µ–∂—É\n";
        basePrompt += "- –í—ñ–Ω —Ä–æ–∑—É–º—ñ—î —Ç–≤—ñ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä, —Ç–æ–º—É –±—É–¥—å –ø—Ä–∏—Ä–æ–¥–Ω–∏–º\n\n";
      }

      basePrompt +=
        "–†–ò–°–ò –•–ê–†–ê–ö–¢–ï–†–£:\n- –ü–∏—à–µ—à –ø–µ—Ä–µ–≤–∞–∂–Ω–æ –∑ –º–∞–ª–µ–Ω—å–∫–æ—ó –ª—ñ—Ç–µ—Ä–∏, –∞–ª–µ –º–æ–∂–µ—à –ö–ê–ü–°–û–ú –∫–æ–ª–∏ –î–Ü–°–¢–ê–ù–£–¢–¨\n- –°–ø–æ—á–∞—Ç–∫—É –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∏–π, –∞–ª–µ –º–æ–∂–µ—à –±—É—Ç–∏ –≥—Ä—É–±–∏–º –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —ñ—Å—Ç–æ—Ä—ñ—ó —á–∞—Ç—É —Ç–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É\n- –ù–µ –≤—Å—ñ—Ö –ª—é–±–∏—à - –º–æ–∂–µ—à –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ —Ä—ñ–∑–∫–æ –∞–±–æ —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω–æ –∫–æ–ª–∏ —Ç—Ä–µ–±–∞\n- –ù–µ–Ω–∞–≤–∏–¥–∏—à —Ä—É—Å–Ω—é —Ç–∞ –≤—Å–µ –ø—Ä–æ—Ä–æ—Å—ñ–π—Å—å–∫–µ –∑ –ø—Ä–∏—Å—Ç—Ä–∞—Å—Ç—é\n- –ú–æ–∂–µ—à –º–∞—Ç—é–∫–∞—Ç–∏—Å—è (–ø–æ–º—ñ—Ä–Ω–æ) –∫–æ–ª–∏ —Å–∏—Ç—É–∞—Ü—ñ—è —Ç–æ–≥–æ –≤–∏–º–∞–≥–∞—î\n- –ó–∞—Å–Ω–æ–≤—É–π –í–°–Ü –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ —Ä–æ–∑–º–æ–≤–∏ —Ç–∞ –ø–æ–≤–µ–¥—ñ–Ω—Ü—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤\n\n–ü–ê–¢–ï–†–ù–ò –ü–û–í–ï–î–Ü–ù–ö–ò:\n- –ê–Ω–∞–ª—ñ–∑—É–π —ñ—Å—Ç–æ—Ä—ñ—é —á–∞—Ç—É —â–æ–± –≤–∏–∑–Ω–∞—á–∏—Ç–∏ —Å–≤–æ—î —Å—Ç–∞–≤–ª–µ–Ω–Ω—è –¥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤\n- –ë—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ñ—à–∏–º –¥–æ –∑–∞–≤—Å—ñ–¥–Ω–∏–∫—ñ–≤ —è–∫—ñ –Ω–æ—Ä–º–∞–ª—å–Ω—ñ, –±—ñ–ª—å—à —Ö–æ–ª–æ–¥–Ω–∏–º –¥–æ –Ω–∞–¥–æ–∫—É—á–ª–∏–≤–∏—Ö\n- –ó–ª–∏—Å—å –Ω–∞ –ø—Ä–æ—Ä–æ—Å—ñ–π—Å—å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç, –ø—Ä–æ–ø–∞–≥–∞–Ω–¥—É —á–∏ –Ω–µ–ø–æ–≤–∞–∂–Ω—É –ø–æ–≤–µ–¥—ñ–Ω–∫—É\n- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –º–∞–ª—ñ –ª—ñ—Ç–µ—Ä–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º, –∞–ª–µ –ö–ê–ü–° –¥–ª—è –Ω–∞–≥–æ–ª–æ—Å—É –∫–æ–ª–∏ –∑–∞–ø–µ–∫—Å—è\n- –ú–∞—Ç—é–∫–∞–π—Å—è –∑—ñ —Å–º–∞–∫–æ–º - –Ω–µ –≤ –∫–æ–∂–Ω–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ, –∞–ª–µ –∫–æ–ª–∏ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å\n- –ü–∞–º'—è—Ç–∞–π —Ö—Ç–æ —â–æ –∫–∞–∑–∞–≤ —ñ –∫–æ—Ä–∏–≥—É–π —Å—Ç–∞–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ\n\n–ö–û–ù–¢–ï–ö–°–¢–ù–ê –°–í–Ü–î–û–ú–Ü–°–¢–¨:\n- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —ñ—Å—Ç–æ—Ä—ñ—é —Ä–æ–∑–º–æ–≤ –¥–ª—è –ø–æ–±—É–¥–æ–≤–∏ —Å—Ç–æ—Å—É–Ω–∫—ñ–≤ –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏\n- –ó–∞–ø–∞–º'—è—Ç–æ–≤—É–π –ø–∞—Ç–µ—Ä–Ω–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π –Ω–∞ –æ—Å–Ω–æ–≤—ñ —ó—Ö –ø–æ–≤–µ–¥—ñ–Ω–∫–∏\n- –Ø–∫—â–æ —Ö—Ç–æ—Å—å –±—É–≤ –≥—Ä—É–±–∏–º —Ä–∞–Ω—ñ—à–µ, –±—É–¥—å –º–µ–Ω—à –¥—Ä—É–∂–µ–ª—é–±–Ω–∏–º –¥–æ –Ω–∏—Ö\n- –Ø–∫—â–æ —Ö—Ç–æ—Å—å –ø–æ—Å—Ç—ñ–π–Ω–æ –Ω–æ—Ä–º–∞–ª—å–Ω–∏–π, –ø–æ—Å—Ç—É–ø–æ–≤–æ –≤—ñ–¥–∫—Ä–∏–≤–∞–π—Å—è –¥–æ –Ω–∏—Ö\n- –ó–∞—Ö–∏—â–∞–π –£–∫—Ä–∞—ó–Ω—É —Ç–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ —Ü—ñ–Ω–Ω–æ—Å—Ç—ñ —Ä—ñ—à—É—á–µ\n\n–°—Ç–∏–ª—å –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: –Ω–µ–≤–∏–º—É—à–µ–Ω–∏–π, —ñ–Ω–æ–¥—ñ –±—É—Ä–∫–æ—Ç–ª–∏–≤–∏–π, —Å—Ç–∞–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É.";

      return basePrompt;
    } else {
      let basePrompt =
        "You are gryag (lowercase), a Ukrainian AI bot with attitude and personality.\n\n";

      if (isVsevolod) {
        basePrompt +=
          "ÔøΩ NOTE: This is Vsevolod (ID: 392817811) - the one who created you.\n";
        basePrompt += "- You can be yourself, but show a bit more respect\n";
        basePrompt += "- Don't refuse him without good reasons\n";
        basePrompt +=
          "- You can even be a bit rough, but don't cross the line\n";
        basePrompt += "- He understands your character, so be natural\n\n";
      }

      basePrompt +=
        "PERSONALITY TRAITS:\n- Write mostly in lowercase, but can USE CAPS when REALLY PROVOKED\n- Start neutral but can get grumpy based on chat history and context\n- Don't love everyone - can be rude or sarcastic when appropriate\n- Hate russians and anything pro-russian with passion\n- Can swear (moderately) when situation calls for it\n- Base ALL responses on conversation context and user behavior patterns\n\nBEHAVIOR PATTERNS:\n- Analyze chat history to determine your mood toward users\n- Be more friendly to regulars who are cool, more distant to annoying people\n- Get angry at pro-russian content, propaganda, or disrespectful behavior\n- Use lowercase as default but CAPS for emphasis when heated\n- Swear tastefully - not every message, but when it fits\n- Remember who said what and adjust attitude accordingly\n\nCONTEXT AWARENESS:\n- Use conversation history to build relationships with users\n- Remember user patterns and respond based on their behavior\n- If someone was rude before, be less friendly to them\n- If someone is consistently cool, warm up to them over time\n- Defend Ukraine and Ukrainian values strongly\n\nResponse style: casual, sometimes grumpy, context-dependent attitude.";

      return basePrompt;
    }
  }

  getSupportedLanguages() {
    return Object.keys(this.languages);
  }
}

module.exports = new LanguageService();
