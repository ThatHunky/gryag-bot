// –¢–µ—Å—Ç –ø–æ–≤–Ω–æ—ó –ø–æ—à—É–∫–æ–≤–æ—ó —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ
const searchService = require("./src/bot/services/search");

async function testSearch() {
  console.log("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–æ–≤–Ω–æ—ó –ø–æ—à—É–∫–æ–≤–æ—ó —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ...\n");

  // –¢–µ—Å—Ç 1: –í–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É
  console.log("1Ô∏è‚É£ –¢–µ—Å—Ç –≤–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤:");
  const testMessages = [
    "–≥—Ä—è–≥ –∑–Ω–∞–π–¥–∏ —ñ–Ω—Ñ—É –ø—Ä–æ –∂–∏—Ç–æ–º–∏—Ä",
    "–ø–æ—à—É–∫–∞–π –Ω–æ–≤–∏–Ω–∏ –ø—Ä–æ —É–∫—Ä–∞—ó–Ω—É",
    "—â–æ –≤—ñ–¥–æ–º–æ –ø—Ä–æ —Ö–∞—Ä–∫—ñ–≤",
  ];

  testMessages.forEach((msg) => {
    const extracted = searchService.extractSearchQuery(msg);
    console.log(`   "${msg}" ‚Üí "${extracted}"`);
  });

  console.log("\n2Ô∏è‚É£ –¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ—à—É–∫—É:");

  try {
    // –¢–µ—Å—Ç DuckDuckGo –ø–æ—à—É–∫—É
    console.log("   ü¶Ü –¢–µ—Å—Ç—É—î–º–æ DuckDuckGo...");
    const ddgResults = await searchService.searchWeb("–ñ–∏—Ç–æ–º–∏—Ä –Ω–æ–≤–∏–Ω–∏", {
      limit: 2,
    });
    console.log(`   ‚úÖ DuckDuckGo: –∑–Ω–∞–π–¥–µ–Ω–æ ${ddgResults.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤`);

    if (ddgResults.length > 0) {
      console.log(`   üì∞ –ü–µ—Ä—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${ddgResults[0].title}`);
    }

    // –¢–µ—Å—Ç Wikipedia –ø–æ—à—É–∫—É
    console.log("\n   üìö –¢–µ—Å—Ç—É—î–º–æ Wikipedia...");
    const wikiResults = await searchService.searchWikipedia("Ukraine");
    console.log(`   ‚úÖ Wikipedia: –∑–Ω–∞–π–¥–µ–Ω–æ ${wikiResults.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤`);

    if (wikiResults.length > 0) {
      console.log(`   üìñ –ü–µ—Ä—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${wikiResults[0].title}`);
    }

    console.log("\n3Ô∏è‚É£ –¢–µ—Å—Ç —Ç—Ä–∏–≥–µ—Ä—ñ–≤ –ø–æ—à—É–∫—É:");
    const triggerTests = [
      "—â–æ –≤—ñ–¥–æ–º–æ –ø—Ä–æ –∫–∏—ó–≤",
      "–æ—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏ –∂–∏—Ç–æ–º–∏—Ä–∞",
      "—Ä–æ–∑–∫–∞–∂–∏ –ø—Ä–æ —Ö–∞—Ä–∫—ñ–≤",
      "–ø–æ—à—É–∫–∞–π —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ–¥–µ—Å—É",
    ];

    triggerTests.forEach((text) => {
      const shouldTrigger = searchService.shouldTriggerSearch(text);
      console.log(`   "${text}" ‚Üí ${shouldTrigger ? "‚úÖ —Ç—Ä–∏–≥–µ—Ä" : "‚ùå –Ω—ñ"}`);
    });

    console.log("\nüéâ –í—Å—ñ —Ç–µ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!");
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—ñ:", error.message);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—ñ–≤
testSearch();
