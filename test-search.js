const searchService = require("./src/bot/services/search");

async function testSearch() {
  console.log("üß™ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è search service...\n");

  // —Ç–µ—Å—Ç 1: –ø—Ä–æ—Å—Ç–∏–π –ø–æ—à—É–∫
  console.log("üìù —Ç–µ—Å—Ç 1: –ø—Ä–æ—Å—Ç–∏–π –ø–æ—à—É–∫");
  try {
    const results = await searchService.searchWeb("—É–∫—Ä–∞—ó–Ω–∞ –Ω–æ–≤–∏–Ω–∏ 2025");
    console.log("‚úÖ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É:", results ? results.length : 0);
    if (results && results.length > 0) {
      console.log(
        "   –ø–µ—Ä—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:",
        results[0].title.substring(0, 50) + "..."
      );
    }
  } catch (error) {
    console.log("‚ùå –ø–æ–º–∏–ª–∫–∞ –ø–æ—à—É–∫—É:", error.message);
  }

  console.log("\n" + "=".repeat(50) + "\n");

  // —Ç–µ—Å—Ç 2: —Ñ–∞–∫—Ç—á–µ–∫
  console.log("üìù —Ç–µ—Å—Ç 2: —Ñ–∞–∫—Ç—á–µ–∫—ñ–Ω–≥");
  try {
    const factResults = await searchService.factCheck(
      "–≤–∞–∫—Ü–∏–Ω–∞ –ø—Ä–æ—Ç–∏ covid –±–µ–∑–ø–µ—á–Ω–∞"
    );
    console.log(
      "‚úÖ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Ñ–∞–∫—Ç—á–µ–∫—É:",
      factResults ? factResults.length : 0
    );
    if (factResults && factResults.length > 0) {
      console.log(
        "   –ø–µ—Ä—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:",
        factResults[0].title.substring(0, 50) + "..."
      );
    }
  } catch (error) {
    console.log("‚ùå –ø–æ–º–∏–ª–∫–∞ —Ñ–∞–∫—Ç—á–µ–∫—É:", error.message);
  }

  console.log("\n" + "=".repeat(50) + "\n");

  // —Ç–µ—Å—Ç 3: –Ω–æ–≤–∏–Ω–∏
  console.log("üìù —Ç–µ—Å—Ç 3: –Ω–æ–≤–∏–Ω–∏");
  try {
    const newsResults = await searchService.getNewsUpdate(
      "—Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó —à—Ç—É—á–Ω–∏–π —ñ–Ω—Ç–µ–ª–µ–∫—Ç"
    );
    console.log("‚úÖ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –Ω–æ–≤–∏–Ω:", newsResults ? newsResults.length : 0);
    if (newsResults && newsResults.length > 0) {
      console.log(
        "   –ø–µ—Ä—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:",
        newsResults[0].title.substring(0, 50) + "..."
      );
    }
  } catch (error) {
    console.log("‚ùå –ø–æ–º–∏–ª–∫–∞ –Ω–æ–≤–∏–Ω:", error.message);
  }

  console.log("\n" + "=".repeat(50) + "\n");

  // —Ç–µ—Å—Ç 4: —Ç—Ä–∏–≥–µ—Ä–∏
  console.log("üìù —Ç–µ—Å—Ç 4: —Ç—Ä–∏–≥–µ—Ä–∏ –ø–æ—à—É–∫—É");
  const searchTriggers = [
    "—â–æ —Å—Ç–∞–ª–æ—Å—è –≤ —É–∫—Ä–∞—ó–Ω—ñ?",
    "–ø–æ—à—É–∫–∞–π —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ü–µ",
    "fact check —Ü—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é",
    "—Ü–µ –ø—Ä–∞–≤–¥–∞ —á–∏ –±—Ä–µ—Ö–Ω—è?",
    "–æ—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏",
    "hello world", // –Ω–µ –º–∞—î —Ç—Ä–∏–≥–µ—Ä–∞
  ];

  searchTriggers.forEach((text) => {
    const needsSearch = searchService.shouldTriggerSearch(text);
    const needsFactCheck = searchService.shouldTriggerFactCheck(text);

    console.log(`   "${text}"`);
    console.log(
      `     –ø–æ—à—É–∫: ${needsSearch ? "‚úÖ" : "‚ùå"}, —Ñ–∞–∫—Ç—á–µ–∫: ${needsFactCheck ? "‚úÖ" : "‚ùå"}`
    );
  });

  console.log("\n" + "=".repeat(50) + "\n");

  // —Ç–µ—Å—Ç 5: –∫–µ—à
  console.log("üìù —Ç–µ—Å—Ç 5: –∫–µ—à —Å–∏—Å—Ç–µ–º–∏");
  console.log("   —Ä–æ–∑–º—ñ—Ä –∫–µ—à—É:", searchService.cache.size);

  // —Ç–µ—Å—Ç—É—î–º–æ —Ç–æ–π —Å–∞–º–∏–π –∑–∞–ø–∏—Ç –∑–Ω–æ–≤—É
  const cacheTestStart = Date.now();
  await searchService.searchWeb("—É–∫—Ä–∞—ó–Ω–∞ –Ω–æ–≤–∏–Ω–∏ 2025");
  const cacheTestTime = Date.now() - cacheTestStart;

  console.log("   —á–∞—Å –¥—Ä—É–≥–æ–≥–æ –∑–∞–ø–∏—Ç—É (–∑ –∫–µ—à—É):", cacheTestTime + "ms");
  console.log("   —Ä–æ–∑–º—ñ—Ä –∫–µ—à—É –ø—ñ—Å–ª—è —Ç–µ—Å—Ç—É:", searchService.cache.size);

  console.log("\nüéâ –≤—Å—ñ —Ç–µ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!");
}

// –∑–∞–ø—É—Å–∫–∞—î–º–æ —Ç–µ—Å—Ç–∏
testSearch().catch(console.error);
