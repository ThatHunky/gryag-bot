// –¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥–∏ search –±–µ–∑ –ª—ñ–Ω–∫—ñ–≤
const CommandHandler = require("./src/bot/handlers/commands");

async function testSearchWithoutLinks() {
  console.log("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è search –∫–æ–º–∞–Ω–¥–∏ –±–µ–∑ –ª—ñ–Ω–∫—ñ–≤...\n");

  // –°–∏–º—É–ª—é—î–º–æ –æ–±'—î–∫—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
  const mockMsg = {
    from: { id: 123, first_name: "–¢–µ—Å—Ç" },
    chat: { id: 456, type: "private" },
    text: "/search –∫–∏—ó–≤",
  };

  // –°–∏–º—É–ª—é—î–º–æ –±–æ—Ç–∞
  const mockBot = {
    sendMessage: (chatId, text, options = {}) => {
      console.log("üì§ –í—ñ–¥–ø–æ–≤—ñ–¥—å –±–æ—Ç–∞:");
      console.log("=".repeat(50));
      console.log(text);
      console.log("=".repeat(50));
      return Promise.resolve({ message_id: 789 });
    },
    sendChatAction: () => Promise.resolve(),
  };

  try {
    await CommandHandler.search(mockMsg, mockBot);
    console.log("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ!");
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞:", error.message);
  }
}

testSearchWithoutLinks();
